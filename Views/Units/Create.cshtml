@model ResultManagement.Models.Core.Unit

@{
    ViewBag.Title = "Create";
}
<script src="https://unpkg.com/jquery@3.3.1/dist/jquery.js"></script>
<h2>Create</h2>


@using (Html.BeginForm("Create","Units",FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Unit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UnitCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitCordinator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitCordinator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitCordinator, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PdfTitle, htmlAttributes: new { @class = "control-label col-md-2" }) (Max: 4mb)
        <div class="col-md-10">
            <p id="PdfError" class="" style="color:red;">@ViewBag.PdfError</p>
           <p id="pdfFileSizeError" style="color:red;"></p>
            <input type="file" id="pdfFile" name="PdfFile" value="Change PDF" required/>
           @*@Html.ValidationMessageFor(model => model.PdfFile, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="submitButton" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script>

    var pdfFileSizeError = document.getElementById("pdfFileSizeError");
    var pdfFile = document.getElementById("pdfFile");
    var submitButton = document.getElementById("submitButton");
    var PdfError = document.getElementById("PdfError");


    submitButton.addEventListener("click", function () {
        
                if (pdfFile.files[0].size > (4*1000 * 1024)) {
                    //pdfFileSizeError.textContent = "File too large";
                      event.returnValue = false;
                }
                   
    })


    $(document).ready(function () {
        $('#pdfFile').bind('change', function () {
            PdfError.textContent = "";
                // check if the file is larger than 4mb
                if (this.files[0].size > (4*1000 * 1024)) {
                    pdfFileSizeError.textContent = "File too large";
                }
                else {
                    // passed. 
                    pdfFileSizeError.textContent = "";
                }
            });
    })

</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
